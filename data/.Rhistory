# function myvif
myvif<-function(x){
myvif=1/(1-r2multv(x))
myvif
sort(myvif, decreasing=TRUE)
}
# we use it, remember vif's > 10 indicate high multicollinearity
myvif(long)
## which variables have strong linear correlations?
long_pca=PCA(long,scale.unit=TRUE, ncp=6, axes=c(1,2))
# Set up
library(ggplot2)
library(dplyr)
# Load data from this website:
# See description: https://data.princeton.edu/wws509/datasets/#salary
salary_data <- read.table("http://data.princeton.edu/wws509/datasets/salary.dat"
, header=TRUE)
View(salary_data)
females <- filter(salary_data, "female")
females <- filter(salary_data, sx == "female")
View(female)
View(females)
nrow(females)
nmal = nrow(salary_data) - nfem
nfem = nrow(females)
nmal = nrow(salary_data) - nfem
nmal
ggplot(salary_data, aes(x = sx, y = sl)) +
geom_violin()
ggplot(salary_data, aes(x = sx, y = sl)) +
+ geom_violin() +
facet_grid(rk ~ .)
ggplot(salary_data, aes(x = sx, y = sl)) +
+ geom_violin()
ggplot(salary_data, aes(x = sx, y = sl)) + geom_violin() +
facet_grid(rk ~ .)
+
+ geom_violin(aes(fill = sx)) +
+ facet_grid(rk ~ .)
+ geom_violin(aes(fill = sx))
# Create this same plot, but *faceted* by rank
ggplot(salary_data, aes(x = sx, y = sl)) + geom_violin(aes(fill = sx)) + facet_grid(rk ~ .)
# Create this same plot, but *faceted* by rank
ggplot(salary_data, aes(x = sx, y = sl)) + geom_violin(aes(fill = sx)) + facet_grid(. ~ rk)
install.packages("grDevices")
install.packages("grDevices")
detach("package:grDevices", unload = TRUE)
library(grDevices, lib.loc = "C:/Program Files/R/R-3.6.1/library")
colfunc <- colorRampPalette(c("blue","white", "yellow", "red"))
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=20), labels = seq(-20,40,l=20))
rasterImage(legend_image, 0, 0, 1,1)
colfunc <- colorRampPalette(c("blue","white", "yellow", "red"))
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","white", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=20), labels = seq(-20,40,l=20))
rasterImage(legend_image, 0, 0, 1,1)
setwd("C:/Users/bea4e/Desktop/University/Data Processes/dataprocesses/data/")
#libraries
library(plyr)
library(ggplot2)
library(rworldmap)
library(rworldxtra)
ocean <- read.csv("icoads_noaa.csv", header = TRUE)
# It could be interesting to analyse also present weather, waves and clouds but more than
# a half of their values are NA, so we decided to drop them. Moreover we drop the year since its the
# same (2010) for every observation. We don't take the column country_code since most of
# the cells are empty.
newCols <- c("month", "day", "latitude", "longitude", "air_temperature", "sea_surface_temp", "sea_level_pressure")
newOcean <- ocean[newCols]
# Omitting all the rows with NA values
newOcean <- na.omit(newOcean, seq_along(sea_surface_temp, air_temperature, sea_level_pressure))
# Correlation matrix to see the relationship between the variables
newOcean.cor = cor(newOcean)
# we can also notice that there is a negative correlation between temperature and longitude
#We can try to plot plot sea_surface_temp vs latitude and we can see a pattern which, as expected
#indicates that the temperature is low in the poles and increases the closer we get to the equator
plot(newOcean$latitude, newOcean$sea_surface_temp)
# we aggregate the date to easen the manipulation
newOcean$Date <- with(newOcean, sprintf("%d-%02d", month, day))
#Creating variable Heisphere by binning the latitude
newOcean$Hemisphere <- cut(newOcean$latitude, c(-90,0, 90))
newOcean$Hemisphere <- revalue(newOcean$Hemisphere, c("(-90,0]"="South"))
newOcean$Hemisphere <- revalue(newOcean$Hemisphere, c("(0,90]"="North"))
# Plotting air_temperature
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","white", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("blue","white", "yellow", "red"))
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","white", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=20), labels = seq(-20,40,l=20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=20), labels = seq(-20,40,l=20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(-20,40,l=20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(-20,40,l=20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=20), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=5), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=20), labels = seq(0,1,l=5))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(-20,40,l=4), labels = seq(-20,40,l=4))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(from = -20, to = 40, by = 20), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("white", "black"))
newOcean$order = findInterval(newOcean$sea_level_pressure, sort(newOcean$sea_level_pressure))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(from = -20, to = 40, by = 20), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(from = -20, to = 40, by = 20), labels = seq(from = -20, to = 40, by = 20))
text(x=1.5, y = seq(0,1,l=5), labels = seq(from = -20, to = 40, by = 20))
text(x=1.5, y = seq(0,1,l=5), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0.5, 0, 1,1)
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(legend_image, 0, 0, 2,1)
rasterImage(legend_image, 0, 0, 2,2)
rasterImage(legend_image, 0, 2, 2,1)
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(legend_image, 0, 0, 1,1)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
rasterImage(legend_image, 0, 0, 1,1)
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
#with legend
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","white", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
#with legend
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("red","yellow", "white", "blue"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
#with legend
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","white", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colorRampPalette(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
colfunc <- colorRampPalette("red","yellow", "white", "blue")
colfunc <- colorRampPalette(c("red","yellow", "white", "blue"))
#with legend
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","white", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$sea_level_pressure, sort(newOcean$sea_level_pressure))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=1), labels = seq(955.5,1046.6,l=1))
rasterImage(legend_image, 0, 0, 1,1)
# Plotting sea_level_pressure
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$sea_level_pressure, sort(newOcean$sea_level_pressure))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=2), labels = seq(955.5,1046.6,l=91,1))
rasterImage(legend_image, 0, 0, 1,1)
# Plotting sea_level_pressure
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$sea_level_pressure, sort(newOcean$sea_level_pressure))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=2), labels = seq(955.5,1046.6,l=2))
rasterImage(legend_image, 0, 0, 1,1)
# Plotting sea_level_pressure
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","red"))
newOcean$order = findInterval(newOcean$sea_level_pressure, sort(newOcean$sea_level_pressure))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'legend title')
text(x=1.5, y = seq(0,1,l=2), labels = seq(955.5,1046.6,l=2))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,1,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 0.5,0.5)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 0.5,0.5)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0.5, 0.5, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0.5, 0.5,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0.5, 0.5,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0.5, 0.5, 0.5,1)
rasterImage(legend_image, 0, 0, 0.5,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=1.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 0.5,0.5)
text(x=1, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
text(x=0.5, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=0.8, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 0.5,0.5)
ggplot(data=ocean_north, aes(x=month, y=air_temperature,2)) +
scale_x_discrete(limits=c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Air temperature by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=month), vjust=-0.3, size=3.5)+
theme_minimal()
ocean_south <- newOcean %>% subset(Hemisphere == "South")
ocean_south <- aggregate(ocean_south,
by = list(ocean_south$month),
FUN = mean)
cols <- c("month", "air_temperature", "sea_surface_temp", "sea_level_pressure")
ocean_south <- ocean_south[cols]
ocean_north <- newOcean %>% subset(Hemisphere == "North")
ocean_north <- aggregate(ocean_north,
by = list(ocean_north$month),
FUN = mean)
ocean_north <- ocean_north[cols]
library(tidyr)
#libraries
library(plyr)
ocean_south <- newOcean %>% subset(Hemisphere == "South")
ocean_south <- aggregate(ocean_south,
by = list(ocean_south$month),
FUN = mean)
cols <- c("month", "air_temperature", "sea_surface_temp", "sea_level_pressure")
ocean_south <- ocean_south[cols]
ocean_north <- newOcean %>% subset(Hemisphere == "North")
ocean_north <- aggregate(ocean_north,
by = list(ocean_north$month),
FUN = mean)
ocean_north <- ocean_north[cols]
ggplot(data=ocean_north, aes(x=month, y=air_temperature,2)) +
scale_x_discrete(limits=c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Air temperature by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=month), vjust=-0.3, size=3.5)+
theme_minimal()
# Correlation matrix to see the relationship between the variables
newOcean.cor = cor(newOcean)
View(newOcean.cor)
ggplot(data=ocean_north, aes(x=month, y=air_temperature,2)) +
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Air temperature by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=month), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=ocean_north, aes(x=month, y=air_temperature,2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Air temperature by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
geom_text(aes(label=month), vjust=-0.3, size=3.5)+
theme_minimal()
ggplot(data=ocean_north, aes(x=month, y=air_temperature,2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Air temperature by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(data=ocean_north, aes(x=month, y=sea_level_pressure,2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(data=ocean_south, aes(x=month, y=sea_level_pressure,2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(data=ocean_south, aes(x=month, y=(log(sea_level_pressure),2))) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(data=ocean_south, aes(x=month, y=log(sea_level_pressure),2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(data=ocean_north, aes(x=month, y=log(sea_level_pressure),2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
# Plotting air_temperature
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
newmap <- getMap(resolution = "high")
pal = colorRampPalette(c("blue","lightblue", "yellow", "red"))
newOcean$order = findInterval(newOcean$air_temperature, sort(newOcean$air_temperature))
plot(newmap, xlim = c(-20, 59), ylim = c(35, 71), asp = 1, col = "antiquewhite1")
points(newOcean$longitude, newOcean$latitude, col=pal(nrow(newOcean))[newOcean$order], pch = 16, cex = .6)
colfunc <- colorRampPalette(c("red","yellow", "lightblue", "blue"))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = 'Air temperature in °C')
text(x=0.8, y = seq(0,0.5,l=4), labels = seq(from = -20, to = 40, by = 20))
rasterImage(legend_image, 0, 0, 0.5,0.5)
ggplot(data=ocean_south, aes(x=month, y=air_temperature,2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Northern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
ggplot(data=ocean_south, aes(x=month, y=air_temperature,2)) +
scale_x_discrete(limits=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))+
theme(axis.text.x = element_text(size=10, angle=45))+
ggtitle("Sea level pressure by month in the Southern Emisphere")+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()
